<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- contents.xml과 연동되는 Spring interface "dev.mvc.contents.ContentsDAOInter" 선언 --> 
<mapper namespace="dev.mvc.frcontents.FRContentsDAOInter">
  <!-- 커뮤니티(공지사항, 게시판, 자료실, 갤러리,  Q/A...)글 등록  -->
<!--   <insert id="create" parameterType="dev.mvc.contents.ContentsVO">
    INSERT INTO contents(contentsno, adminno, cateno, title, content, passwd, word,
                                  file1, file1saved, thumb1, size1, rdate)
    VALUES(contents_seq.nextval, #{adminno}, #{cateno}, #{title}, #{content}, #{passwd}, #{word},
               #{file1}, #{file1saved}, #{thumb1}, #{size1}, sysdate)
  </insert> -->
  
  <!-- 쇼핑몰의 상품 정보 등록  -->
  <insert id="create" parameterType="dev.mvc.frcontents.FRContentsVO">
  INSERT INTO frcontents(frno, cateno, memberno,
                   fr_name, fr_content, fr_addres, fr_rdate,fr_word,
                   price, file1, file1saved, thumb1, size1)
  VALUES (frcontents_seq.nextval, #{cateno}, #{memberno}, 
        #{fr_name}, #{fr_content}, #{fr_addres}, sysdate, #{fr_word},
       #{price}, #{file1}, #{file1saved}, #{thumb1}, #{size1})
  </insert>
  
    <!-- 카테고리별 검색 레코드 갯수 -->
  <select id="search_count" resultType="int" parameterType="HashMap">
    SELECT COUNT(*) as cnt
    FROM frcontents
    <choose>
      <when test="fr_word == null or fr_word == ''"> <!-- 검색하지 않는 경우의 레코드 갯수 -->
        WHERE cateno=#{cateno, jdbcType=VARCHAR }
      </when>
      <otherwise> <!-- 검색하는 경우의 레코드 갯수 -->
        WHERE cateno=#{cateno, jdbcType=VARCHAR} AND (UPPER(fr_name) LIKE '%' || #{fr_name, jdbcType=VARCHAR} || '%' 
                                                  OR UPPER(fr_content) LIKE '%' || #{fr_content, jdbcType=VARCHAR} || '%' 
                                                  OR UPPER(fr_word) LIKE '%' || #{fr_word, jdbcType=VARCHAR} || '%')
      </otherwise>
    </choose>
  </select>
  
  <select id="list_by_cateno_search_paging" resultType="dev.mvc.frcontents.FRContentsVO" parameterType="HashMap">
  SELECT frno, cateno, memberno,
         fr_name, fr_content, fr_addres, fr_map,fr_word, fr_rdate, fr_udate, review_cnt,
         price, file1, file1saved, thumb1, size1, ratings
  FROM(
       SELECT frno, cateno, memberno,
         fr_name, fr_content, fr_addres, fr_map,fr_word, fr_rdate, fr_udate, review_cnt,
         price, file1, file1saved, thumb1, size1, ratings, rownum as r
       FROM (
            SELECT frno, cateno, memberno,
                   fr_name, fr_content, fr_addres, fr_map,fr_word, fr_rdate, fr_udate, review_cnt,
                   price, file1, file1saved, thumb1, size1, ratings
            FROM frcontents
                        <choose>
                          <when test="fr_word == null or fr_word == ''"> <!-- 검색하지 않는 경우 -->
                             WHERE cateno=#{cateno}
                          </when>
                          <otherwise>
                            WHERE cateno=#{cateno} AND (UPPER (fr_name) LIKE '%' || #{fr_word} || '%' 
                                                            OR UPPER(fr_content) LIKE '%' || #{fr_word} || '%' 
                                                            OR UPPER(fr_word) LIKE '%' || #{fr_word} || '%')
                          </otherwise>
                        </choose>
                        ORDER BY frno DESC
               )
    )
    WHERE <![CDATA[ r >= #{start_num} AND r <= #{end_num} ]]>
     
    <!--  1 page: WHERE r >= 1 AND r <= 10; 
            2 page: WHERE r >= 11 AND r <= 20;
            3 page: WHERE r >= 21 AND r <= 30; -->
     
  </select>   
  
  <!-- 조회, id: read, 입력: cateno, 리턴: ContentsVO -->
  <select id="read" resultType="dev.mvc.frcontents.FRContentsVO" parameterType="int">
   SELECT frno, cateno, memberno,
       fr_name, fr_content, fr_addres, fr_map,fr_word, fr_rdate, fr_udate, review_cnt,
       price, file1, file1saved, thumb1, size1, ratings
    FROM frcontents
    WHERE frno = #{frno}
  </select>
  
    <!-- 글 수정 -->
  <update id="update_text" parameterType="dev.mvc.frcontents.FRContentsVO">
    UPDATE frcontents
    SET fr_name=#{fr_name}, fr_content=#{fr_content}, fr_addres=#{fr_addres}, 
          fr_word=#{fr_word}, fr_udate=sysdate, price=#{price}
    WHERE frno=#{frno}
  </update>
  
    <!-- 파일 수정 -->
  <update id="update_file" parameterType="dev.mvc.frcontents.FRContentsVO">
    UPDATE frcontents
    SET file1=#{file1}, file1saved=#{file1saved}, thumb1=#{thumb1}, size1=#{size1}
    WHERE frno=#{frno}
  </update>
 
  
  <!-- 삭제 -->
   <delete id="delete" parameterType="int">
    DELETE FROM frcontents
    WHERE frno=#{frno}
  </delete>
  
   <!-- 특정 카테고리에 속한 레코드 갯수 산출 -->
  <select id="count_by_cateno" resultType="int" parameterType="int">
    SELECT COUNT(*) as cnt
    FROM frcontents
    WHERE cateno=#{cateno}
  </select>
  
    <!-- Map 등록, 수정, 삭제 -->
  <update id="map" parameterType="HashMap">
    UPDATE frcontents 
    SET fr_map=#{fr_map}
    WHERE frno=#{frno}
  </update>   
  
    <!-- 추천 목록, WHERE contentsno IN (246, 318, 720, 741, 750) -->
  <select id="mf_food_member" resultType="dev.mvc.frcontents.FRContentsVO" parameterType="HashMap">
	       SELECT frno, cateno, memberno,
	       fr_name, fr_content, fr_addres, fr_map,fr_word, fr_rdate, fr_udate, review_cnt,
	       price, file1, file1saved, thumb1, size1, ratings
				FROM frcontents 
				WHERE frno IN <foreach collection="frno_list" item="item" index="index" open="(" separator="," close=")">#{item}</foreach>
				ORDER BY frno ASC
  </select>
  
    <!-- 평균 -->
  <update id="update_ratings" parameterType="dev.mvc.frcontents.FRContentsVO">
    UPDATE frcontents
    SET ratings= #{ratings}
    WHERE frno=#{frno}
  </update>
  
    <select id="list_by_cateno_search_paging_all" resultType="dev.mvc.frcontents.FRContentsVO" parameterType="HashMap">
  SELECT frno, cateno, memberno,
         fr_name, fr_content, fr_addres, fr_map,fr_word, fr_rdate, fr_udate, review_cnt,
         price, file1, file1saved, thumb1, size1, ratings
  FROM(
       SELECT frno, cateno, memberno,
         fr_name, fr_content, fr_addres, fr_map,fr_word, fr_rdate, fr_udate, review_cnt,
         price, file1, file1saved, thumb1, size1, ratings, rownum as r
       FROM (
            SELECT frno, cateno, memberno,
                   fr_name, fr_content, fr_addres, fr_map,fr_word, fr_rdate, fr_udate, review_cnt,
                   price, file1, file1saved, thumb1, size1, ratings
            FROM frcontents
                        <choose>
                          <when test="fr_word == null or fr_word == ''"> <!-- 검색하지 않는 경우 -->
                            
                          </when>
                          <otherwise>
                            WHERE    (UPPER (fr_name) LIKE '%' || #{fr_word} || '%' 
                                                            OR UPPER(fr_content) LIKE '%' || #{fr_word} || '%' 
                                                            OR UPPER(fr_word) LIKE '%' || #{fr_word} || '%')
                          </otherwise>
                        </choose>
                        ORDER BY frno ASC
               )
    )
    WHERE <![CDATA[ r >= #{start_num} AND r <= #{end_num} ]]>
     
    <!--  1 page: WHERE r >= 1 AND r <= 10; 
            2 page: WHERE r >= 11 AND r <= 20;
            3 page: WHERE r >= 21 AND r <= 30; -->
     
  </select>   
  
      <!-- 카테고리별 검색 레코드 갯수 -->
  <select id="search_count_all" resultType="int" parameterType="HashMap">
    SELECT COUNT(*) as cnt
    FROM frcontents
    <choose>
      <when test="fr_word == null or fr_word == ''"> <!-- 검색하지 않는 경우의 레코드 갯수 -->
      
      </when>
      <otherwise> <!-- 검색하는 경우의 레코드 갯수 -->
        WHERE (UPPER(fr_name) LIKE '%' || #{fr_name, jdbcType=VARCHAR} || '%' 
                                                  OR UPPER(fr_content) LIKE '%' || #{fr_content, jdbcType=VARCHAR} || '%' 
                                                  OR UPPER(fr_word) LIKE '%' || #{fr_word, jdbcType=VARCHAR} || '%')
      </otherwise>
    </choose>
  </select>
  
</mapper>





